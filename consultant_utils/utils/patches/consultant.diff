diff --git a/config-overrides.js b/config-overrides.js
index 70d45b9..16433ad 100644
--- a/config-overrides.js
+++ b/config-overrides.js
@@ -1,3 +1,4 @@
+const webpack = require('webpack');
 const { override, fixBabelImports, addLessLoader, useEslintRc } = require('customize-cra');
 // @import '~antd/es/style/themes/default.less';
 
@@ -45,6 +46,14 @@ const overrideFn = override(
 
 
 module.exports = function override(config, env) {
+    if (!config.plugins) {
+        config.plugins = [];
+    }
+
+    config.plugins.push(new webpack.optimize.LimitChunkCountPlugin({
+        maxChunks: 1
+    }));
+
     const nConfig = overrideFn(config, env);
     nConfig.plugins.push(new FilterWarningsPlugin({
         exclude: /mini-css-extract-plugin[^]*Conflicting order between:/
diff --git a/package.json b/package.json
index 81741b8..95dd95b 100644
--- a/package.json
+++ b/package.json
@@ -20,6 +20,7 @@
     "react-router-dom": "^5.1.2",
     "react-scripts": "3.2.0",
     "sockjs-client": "^1.4.0",
+    "webpack": "4.41.0",
     "yup": "^0.28.0"
   },
   "scripts": {
@@ -39,6 +40,7 @@
       "not op_mini all"
     ],
     "development": [
+      "ie 11",
       "last 1 chrome version",
       "last 1 firefox version",
       "last 1 safari version"
diff --git a/public/index.html b/public/index.html
index 54634cc..0febb7d 100644
--- a/public/index.html
+++ b/public/index.html
@@ -25,6 +25,35 @@
       Learn how to configure a non-root public URL by running `npm run build`.
     -->
     <title>РМО</title>
+    <style>
+        .ant-notification-fade-enter, .move-up-enter, .zoom-big-appear {
+            opacity: 1 !important;
+        }
+
+        .zoom-big-appear {
+            transform: none !important;
+        }
+
+        .ant-notification-fade-leave, .move-up-leave, .zoom-big-leave {
+            display: none !important;
+        }
+    </style>
+    <script src="/tests/utils/jasmine/lib/jasmine-3.4.0/jasmine.js"></script>
+    <script src="/tests/utils/jasmine/lib/jasmine-3.4.0/jasmine-html.js"></script>
+    <script>
+        var windowLoadHandler = window.onload;
+    </script>
+    <script src="/tests/utils/jasmine/lib/jasmine-3.4.0/boot.js"></script>
+    <script>
+        window.onload = windowLoadHandler;
+    </script>
+    <script src="/tests/utils/jasmine/lib/jasmine-ajax/lib/mock-ajax.js"></script>
+    <script src="/tests/utils/jasmine/console-reporter.js"></script>
+    <script src="/tests/utils/js-tester.js"></script>
+    <script type="text/javascript">
+        var tests = new JsTester_Tests(new JsTester_Factory());
+        tests.exposeDebugUtils('jsTestDebug');
+    </script>
   </head>
   <body>
     <noscript>You need to enable JavaScript to run this app.</noscript>
@@ -39,5 +68,8 @@
       To begin the development, run `npm start` or `yarn start`.
       To create a production bundle, use `npm run build` or `yarn build`.
     -->
+    <script src="/tests/utils/require.js"></script>
+    <script src="/tests/tests.js"></script>
+    <script src="/tests/utils/tests.js"></script>
   </body>
 </html>
diff --git a/src/history.js b/src/history.js
index 9937105..d590c48 100644
--- a/src/history.js
+++ b/src/history.js
@@ -1,3 +1,3 @@
-import { createBrowserHistory } from 'history';
+import { createMemoryHistory } from 'history';
 
-export default createBrowserHistory();
+export default createMemoryHistory();
diff --git a/src/index.js b/src/index.js
index 032019a..0cae355 100644
--- a/src/index.js
+++ b/src/index.js
@@ -2,7 +2,7 @@ import React from 'react';
 import ReactDOM from 'react-dom';
 import { Router } from 'react-router-dom';
 import App from './App';
-import stores from './stores'
+import createStores from './stores'
 import { Provider } from 'mobx-react';
 import history from './history';
 import moment from 'moment';
@@ -21,12 +21,40 @@ moment.updateLocale('ru', {
     },
 });
 
+window.application = {
+    run({
+        setHistory = () => null
+    }) {
+        setHistory(history);
+ 
+        this.exit();
+ 
+        let container = document.getElementById('root');
+ 
+        if (!container) {
+            container = document.createElement('div');
+            container.id = 'root';
+            document.body.appendChild(container);
+        }
 
-ReactDOM.render(
-    <Provider {...stores}>
-        <Router history={history}>
-            <App />
-        </Router>
-    </Provider>,
-    document.getElementById('root')
-);
+        ReactDOM.render(
+            <Provider {...createStores()}>
+                <Router history={history}>
+                    <App />
+                </Router>
+            </Provider>,
+            container
+        );
+    },
+
+    exit() {
+        const container = document.getElementById('root');
+
+        if (!container || !container.firstChild) {
+            return;
+        }
+
+        ReactDOM.unmountComponentAtNode(container);
+        container.remove();
+    }
+};
diff --git a/src/stores/index.js b/src/stores/index.js
index b82271d..499e45d 100644
--- a/src/stores/index.js
+++ b/src/stores/index.js
@@ -3,11 +3,9 @@ import SettingsStore from '../components/settings/SettingsStore';
 
 class Stores {
     constructor() {
-        this.appStore = new AppStore(this);
+        this.appStore = new AppStore(this, false);
         this.settingsStore = new SettingsStore(this);
     }
 }
 
-const stores = new Stores();
-
-export default stores;
\ No newline at end of file
+export default () => new Stores();
\ No newline at end of file
