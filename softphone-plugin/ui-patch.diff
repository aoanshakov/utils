diff --git a/package.json b/package.json
index 10e5843d..defe6839 100644
--- a/package.json
+++ b/package.json
@@ -11,9 +11,9 @@
     "type": "git",
     "url": "git+https://gitlab.uis.dev/lib/web/ui.git"
   },
-  "main": "lib/index.js",
+  "main": "src/index.ts",
   "files": [
-    "lib"
+    "src"
   ],
   "engines": {
     "node": ">=18.13.0",
@@ -110,14 +110,12 @@
     "postcss-lightningcss": "1.0.1",
     "postcss-url": "10.1.3",
     "prettier": "3.4.2",
-    "react": "18.3.1",
     "react-animate-height": "2.0.23",
     "react-dnd": "16.0.1",
     "react-dnd-html5-backend": "16.0.1",
     "react-dom": "18.3.1",
     "react-input-mask": "2.0.4",
     "react-resizable": "3.0.4",
-    "react-router-dom": "6.9.0",
     "react-virtualized": "9.22.5",
     "rollup": "4.22.4",
     "rollup-plugin-cleandir": "3.0.0",
diff --git a/src/components/icon/icon.tsx b/src/components/icon/icon.tsx
index c602b3de..71932d4a 100644
--- a/src/components/icon/icon.tsx
+++ b/src/components/icon/icon.tsx
@@ -1,3 +1,4 @@
+import * as comagicIcons from '../../icons/comagic';
 import cn from 'classnames';
 import React, { useMemo } from 'react';
 
@@ -30,6 +31,13 @@ export type IconProps = React.HTMLAttributes<HTMLSpanElement> & {
     type?: IconType;
 };
 
+const themes: Record<Theme, ComagicIcons | MegafonIcons> = {
+    comagic: comagicIcons,
+    novofon: comagicIcons,
+    callgear: comagicIcons,
+    megafon: comagicIcons,
+};
+
 const Icon: React.ForwardRefRenderFunction<unknown, IconProps> = (props, ref) => {
     const {
         component,
@@ -94,16 +102,14 @@ const Icon: React.ForwardRefRenderFunction<unknown, IconProps> = (props, ref) =>
 
     React.useEffect(() => {
         void (async () => {
-            try {
-                const module = await import(
-                    `../../icons/${configTheme === 'megafon' ? 'megafon' : 'comagic'}/${component}`
-                );
-
-                setComponent(() => (module as { default: React.ComponentType })?.default);
-            } catch (e) {
-                setComponent(() => NotFound);
-                console.error(e);
+            const icons = themes[configTheme];
+            let Component = icons[component];
+
+            if (!Component) {
+                Component = NotFound;
             }
+
+            setComponent(() => Component);
         })();
     }, [configTheme, component]);
 
@@ -127,6 +133,9 @@ const Icon: React.ForwardRefRenderFunction<unknown, IconProps> = (props, ref) =>
             onMouseEnter={onMouseEnter}
             onMouseLeave={onMouseLeave}
             {...restProps}
+            {...(process.env.REACT_APP_TEST_MODE === 'true' ? {
+                ['data-component']: component,
+            } : {})}
         >
             {renderComponent}
         </span>
diff --git a/src/components/number-field/number-field.tsx b/src/components/number-field/number-field.tsx
index 921a31f2..225fdbad 100644
--- a/src/components/number-field/number-field.tsx
+++ b/src/components/number-field/number-field.tsx
@@ -31,7 +31,7 @@ function isValidNumber(value: string): boolean {
     return hasValidFormat && hasSpecialSymbols;
 }
 
-const NumberField: ForwardRefRenderFunction<unknown, NumberFieldProps> = props => {
+const NumberField: ForwardRefRenderFunction<unknown, NumberFieldProps> = (props, ref) => {
     const { min, max, value, defaultValue, onChange, fixed, onBlur } = props;
     const initValue = defaultValue !== undefined ? String(defaultValue) : value !== undefined ? String(value) : '';
     const getValue = () => {
