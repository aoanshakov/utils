diff --git a/package.json b/package.json
index a50f531..f41418f 100644
--- a/package.json
+++ b/package.json
@@ -54,7 +54,7 @@
   },
   "dependencies": {
     "@babel/runtime": "^7.13.9",
-    "antd": "^4.13.0",
+    "antd": "^3.26.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -78,6 +78,6 @@
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "1.20.2"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index 3db55ae..6a572f0 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -1,6 +1,11 @@
 import React from 'react';
 import { types, Instance, getSnapshot, applySnapshot, SnapshotOut } from 'mobx-state-tree';
 import makeInspectable from 'mobx-devtools-mst';
+import createSoftphoneReducer from 'uis-softphone/reducer';
+import { showWidget, hideWidget } from 'uis-softphone/actions';
+import createSoftphoneMiddleware from 'uis-softphone/middleware';
+import thunkMiddleware from 'redux-thunk';
+import { combineReducers, createStore, applyMiddleware } from 'redux';
 
 type RootInstanceSnapshotOut = SnapshotOut<typeof RootStore>;
 
@@ -28,6 +33,30 @@ export const RootStore = types
         let initialState: RootInstanceSnapshotOut;
 
         const afterCreate = () => {
+            self.reduxStore = createStore(combineReducers({
+                requestUrls: () => () => ({
+                    httpServerUrl: `https://${self.configStore.SOFTPHONE_HOST}`
+                }),
+                mayHideSoftphone: () => () => true,
+                getPhoneNumber: () => () => '',
+                createSlavesNotification: () => state => ({}),
+                getWebRTCConfig: () => () => ({}),
+                ...createSoftphoneReducer({
+                    i18n: key => key,
+                    appProject: '',
+                    soundOverrides: {},
+                    overrides: {}
+                })
+            }), {}, applyMiddleware(
+                thunkMiddleware,
+                createSoftphoneMiddleware()
+            ));
+
+            const args = [self.reduxStore.dispatch, self.reduxStore.getState()];
+
+            self.showSoftphone = () => showWidget(...args);
+            self.hideSoftphone = () => hideWidget(...args)
+
             initialState = getSnapshot(self);
         };
 
@@ -41,7 +70,8 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
 
 if (process.env.NODE_ENV === 'development') {
     window.softphoneRootStore = rootStore;
