diff --git a/package.json b/package.json
index 9c75909..c047c3d 100644
--- a/package.json
+++ b/package.json
@@ -55,7 +55,7 @@
   "dependencies": {
     "nanoid": "2.1.11",
     "@babel/runtime": "^7.13.9",
-    "antd": "^4.13.0",
+    "antd": "3.26.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -79,6 +79,6 @@
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "0.0.154"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index db26c2d..b658039 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -139,7 +139,8 @@ export const RootStore = types
             {
                 const updateState = (() => {
                     const state = {
-                        disabled: true,
+                        configFetched: false,
+                        accessGranted: false,
                         token: '',
                         softphoneHost: ''
                     };
@@ -163,12 +164,13 @@ export const RootStore = types
                         }
 
                         const {
-                            disabled,
+                            accessGranted,
+                            configFetched,
                             token,
                             softphoneHost
                         } = state;
 
-                        if (!disabled && token && softphoneHost) {
+                        if (accessGranted && configFetched && token && softphoneHost) {
                             const {
                                 webRTC: {shouldInitialize},
                                 changeAuthToken
@@ -195,20 +197,31 @@ export const RootStore = types
                     token: (token => token ? `${token}` : '')(self.authStore.getToken()?.jwt)
                 });
 
+                self.handleAccountFetched = ({
+                    account: { permissions },
+                    hasFeatureFlag
+                }) => updateState({
+                    accessGranted: !!(
+                        permissions.get('softphone_login')?.is_select &&
+                        hasFeatureFlag('softphone')
+                    )
+                });
+
                 window.addEventListener('tokenChange', () => updateState(getTokenParams()));
 
                 window.addEventListener('tokenRemove', () => updateState({
                     token: '',
-                    disabled: true
+                    configFetched: false,
+                    accessGranted: false
                 }));
 
                 self.setStartApp = isStartApp => self.reduxStore.dispatch(setStartApp(isStartApp));
                 self.setStartMinimize = isStartMinimize => self.reduxStore.dispatch(setStartMinimize(isStartMinimize));
 
-                self.enable = () => updateState({
+                self.setConfigFetched = () => (updateState({
                     ...getTokenParams(),
-                    disabled: false
-                });
+                    configFetched: true
+                }));
 
                 self.setConfig = ({REACT_APP_SOFTPHONE_BACKEND_HOST: softphoneHost}) => {
                     self.reduxStore.dispatch({
@@ -237,4 +250,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
