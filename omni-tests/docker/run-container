#!/bin/bash

action="initialize"
farg=""
isOsX=0
dockerArguments=""
entrypointArguments=""
buildImage=0
noCache=""
imageTag="omni-tests"

if [ $(uname | grep Darwin | wc -l) -eq 0 ]
then
    dockerArguments="$dockerArguments --mount type=bind,source=/etc/passwd,target=/etc/passwd"
    dockerArguments="$dockerArguments --mount type=bind,source=/etc/group,target=/etc/group"
    dockerArguments="$dockerArguments --mount type=bind,source=$HOME/.ssh/id_ed25519,target=/root/.ssh/id_ed25519"
    entrypointArguments="$entrypointArguments --owner $USER"
    farg="-f"
else
    isOsX=1
    dockerArguments="$dockerArguments --mount type=bind,source=$HOME/.ssh/id_rsa,target=/root/.ssh/id_rsa"
fi

function getAbsolutePath {
    currentDirectory=$(pwd)
    cd $@
    result=$(pwd)
    echo $result
    cd $currentDirectory
}

while [ -n "$1" ]
do
    if [ "$1" = "--build-image" ]
    then
        buildImage=1
    elif [ "$1" = "--no-cache" ]
    then
        noCache="--no-cache"
    elif [ "$1" = "--action" ]
    then
        action=$2

        if [ "$2" = "run" ]
        then
            dockerArguments="$dockerArguments --network=host"
        fi

        shift
    elif [ "$1" = "--network=host" ]
    then
        dockerArguments="$dockerArguments $1"
        shift
    else
        entrypointArguments="$entrypointArguments $1"
    fi

    shift
done

docker --version
if [ $? -ne 0 ]
then
    echo "Установи докер"
    exit 1
fi

currentFile=$0

if [ -L $currentFile ]
then
    currentFile=$(readlink $farg $currentFile)
    if [ $? -ne 0 ]
    then
        echo "Не удалось получить путь к скрипту"
        exit 1
    fi
fi

currentDirectory=$(dirname $currentFile)
if [ $? -ne 0 ]
then
    echo "Не удалось получить текущую директорию"
    exit 1
fi

if [ $buildImage -eq 1 ]
then
    docker build $noCache -t $imageTag $currentDirectory

    if [ $? -ne 0 ]
    then
        echo "Не удалось собрать образ"
        exit 1
    fi

    exit 0
fi

linesCount=$(docker images ${imageTag} | wc -l)
if [ $? -ne 0 ]
then
    echo "Не удалось получить список образов"
    exit 1
fi

if [ $linesCount -eq 1 ]
then
    docker build --no-cache -t $imageTag $currentDirectory

    if [ $? -ne 0 ]
    then
        echo "Не удалось собрать образ"
        exit 1
    fi
fi

applicationDirectory="$currentDirectory/.."

if [ $isOsX -eq 0 ]
then
    applicationDirectory=$(readlink -f $applicationDirectory)
    if [ $? -ne 0 ]
    then
        echo "Не удалось получить директорию с приложением"
        exit 1
    fi
else
    applicationDirectory=$(getAbsolutePath $applicationDirectory)
fi

docker run -it --rm \
    -v $applicationDirectory:/usr/local/src \
    --privileged=true \
    --mount type=bind,source=$HOME/.ssh/known_hosts,target=/root/.ssh/known_hosts \
    $dockerArguments \
    $imageTag \
    --action $action \
    $entrypointArguments
