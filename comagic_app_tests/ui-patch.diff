diff --git a/src/components/file-drop/file-drop.helpers.ts b/src/components/file-drop/file-drop.helpers.ts
index e331fde..989140c 100644
--- a/src/components/file-drop/file-drop.helpers.ts
+++ b/src/components/file-drop/file-drop.helpers.ts
@@ -4,7 +4,7 @@ export const initInput = (accept: string, multiple?: boolean): HTMLInputElement
     const inputElement = document.createElement('input');
 
     inputElement.type = 'file';
-    inputElement.accept = accept;
+    accept && (inputElement.accept = accept);
 
     if (multiple) {
         inputElement.multiple = multiple;
diff --git a/src/components/file-drop/file-drop.tsx b/src/components/file-drop/file-drop.tsx
index 786af31..c99a10f 100644
--- a/src/components/file-drop/file-drop.tsx
+++ b/src/components/file-drop/file-drop.tsx
@@ -46,6 +46,7 @@ const FileDrop: React.ForwardRefRenderFunction<unknown, FileDropProps> = (props,
         onDownload,
     } = props;
 
+    const isTest = process.env.REACT_APP_TEST_MODE === 'true';
     const [isDrag, setDrag] = useState(false);
     const [isErrorFileType, setErrorFileType] = useState(false);
 
@@ -231,7 +232,14 @@ const FileDrop: React.ForwardRefRenderFunction<unknown, FileDropProps> = (props,
     const handleClick = () => {
         if (isLoadDefault) {
             const element = initInput(accept.join(','), multiple);
-            element.click();
+
+            if (process.env.REACT_APP_TEST_MODE === 'true') {
+                document.body.appendChild(element);
+                console.log('FILEI NPUT', element);
+            } else {
+                element.click();
+            }
+
             element.onchange = ({ target }: Event) => {
                 beforeUpload((target as HTMLInputElement).files);
             };
diff --git a/src/components/icon/icon.tsx b/src/components/icon/icon.tsx
index 7a9d9b6..57b7b1f 100644
--- a/src/components/icon/icon.tsx
+++ b/src/components/icon/icon.tsx
@@ -116,6 +116,9 @@ const Icon: React.ForwardRefRenderFunction<unknown, PropsWithChildren<IconProps>
             onMouseLeave={onMouseLeave}
             test-id={testId}
             ref={ref as React.MutableRefObject<HTMLSpanElement>}
+            {...(process.env.REACT_APP_TEST_MODE === 'true' ? {
+                ['data-component']: component,
+            } : {})}
         >
             <Component {...nestProps} />
         </span>
