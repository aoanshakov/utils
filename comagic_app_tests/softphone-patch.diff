diff --git a/package.json b/package.json
index 18318f8..2d66e26 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,6 @@
     "@types/node": "^14.14.37",
     "@types/react": "^17.0.2",
     "@types/react-dom": "^17.0.1",
-    "@types/react-router-dom": "^5.1.6",
     "@types/uuid": "^8.3.1",
     "@types/yup": "^0.29.11",
     "@typescript-eslint/eslint-plugin": "^4.16.1",
@@ -56,7 +55,6 @@
     "string-hash": "^1.1.3",
     "nanoid": "^3.2.0",
     "@babel/runtime": "^7.13.9",
-    "@comagic/core": "^0.6.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -65,7 +63,6 @@
     "filesize": "^8.0.3",
     "formik": "^2.2.9",
     "history": "^4.10.1",
-    "magic-ui": "./magic_ui",
     "mobx": "^6.1.8",
     "mobx-react-lite": "^3.2.0",
     "mobx-state-tree": "^5.0.1",
@@ -73,15 +70,12 @@
     "react": "^17.0.1",
     "react-csv": "^2.0.3",
     "react-dom": "^17.0.1",
-    "react-intl": "^5.13.2",
-    "react-router-dom": "^5.2.0",
     "react-redux": "^7.0.0",
     "redux": "^4.0.0",
     "redux-thunk": "^2.3.0",
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "git+https://sip_lib:glpat-Xzs1ef2zY2QoxFSchj8P@gitlab.uis.dev/web/sip_lib.git#multitab-local",
-    "@uiscom/uis_webrtc": "git+https://uis_webrtc:glpat-ydssS-Qi8NFPN7dmjkcp@gitlab.uis.dev/web/uis_webrtc.git#local-multitab"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index 96521bc..f746b98 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -62,6 +62,8 @@ export type ConfigProps = {
     REACT_APP_LOCALE: string;
 };
 
+export const RECENT_REFRESH_DELAY = 1500;
+
 export const ConfigStore = types
     .model('ConfigStore', {
         REACT_APP_LOCALE: types.optional(types.string, 'en'),
@@ -250,6 +252,8 @@ export const RootStore = types
                         case HANDLE_EVENT: {
                             const { data } = action;
 
+                            data.name == 'call_session_finished' && self.callHistoryStore.refreshData(500);
+
                             data.name == 'application_version_changed' &&
                                 applicationChangeHandlers.forEach(handler => handler(data));
 
@@ -286,7 +290,7 @@ export const RootStore = types
                             break;
                         case JSSIP_CALL_ENDED:
                             handlerCallEnd(store.getState().settings.closeOnCallEnd);
-                            self.callHistoryStore.refreshData();
+                            self.callHistoryStore.refreshData(RECENT_REFRESH_DELAY);
                             break;
                         case JSSIP_INBOUNDING_CALL_ENDED:
                             dispatch(setPrompterSipLine(null));
@@ -616,4 +620,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
