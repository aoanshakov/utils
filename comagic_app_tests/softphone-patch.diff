diff --git a/package.json b/package.json
index 18318f8..2d66e26 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,6 @@
     "@types/node": "^14.14.37",
     "@types/react": "^17.0.2",
     "@types/react-dom": "^17.0.1",
-    "@types/react-router-dom": "^5.1.6",
     "@types/uuid": "^8.3.1",
     "@types/yup": "^0.29.11",
     "@typescript-eslint/eslint-plugin": "^4.16.1",
@@ -56,7 +55,6 @@
     "string-hash": "^1.1.3",
     "nanoid": "^3.2.0",
     "@babel/runtime": "^7.13.9",
-    "@comagic/core": "^0.6.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -65,7 +63,6 @@
     "filesize": "^8.0.3",
     "formik": "^2.2.9",
     "history": "^4.10.1",
-    "magic-ui": "./magic_ui",
     "mobx": "^6.1.8",
     "mobx-react-lite": "^3.2.0",
     "mobx-state-tree": "^5.0.1",
@@ -73,15 +70,12 @@
     "react": "^17.0.1",
     "react-csv": "^2.0.3",
     "react-dom": "^17.0.1",
-    "react-intl": "^5.13.2",
-    "react-router-dom": "^5.2.0",
     "react-redux": "^7.0.0",
     "redux": "^4.0.0",
     "redux-thunk": "^2.3.0",
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "git+https://sip_lib:glpat-Xzs1ef2zY2QoxFSchj8P@gitlab.uis.dev/web/sip_lib.git#multitab-local",
-    "@uiscom/uis_webrtc": "git+https://uis_webrtc:glpat-ydssS-Qi8NFPN7dmjkcp@gitlab.uis.dev/web/uis_webrtc.git#local-multitab"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index a6ede12..e5406ee 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -2,7 +2,6 @@ import React from 'react';
 import { eventBus } from '@comagic/core';
 import { types, Instance, getSnapshot, applySnapshot, SnapshotOut } from 'mobx-state-tree';
 import makeInspectable from 'mobx-devtools-mst';
-import createSoftphoneReducer, { maybeHidePhoneNumber } from 'uis-softphone/reducer';
 import createI18N from 'uis-softphone/common/createI18N';
 import { authorization } from 'uis-softphone/authorization/actions';
 import prompter, { checkPendingCallToPrompt } from './prompter/reducer';
@@ -11,6 +10,7 @@ import createSoftphoneMiddleware from 'uis-softphone/middleware';
 import thunkMiddleware from 'redux-thunk';
 import { combineReducers, createStore, applyMiddleware } from 'redux';
 import { AuthStore } from './auth/AuthStore';
+import { AppStore } from './app/AppStore';
 import { EmployeesStore } from './employees/EmployeesStore';
 import { WebsocketStore } from './websocket/WebsocketStore';
 import { StatusesStore } from './statuses/StatusesStore';
@@ -20,6 +20,11 @@ import { intlMessages } from '../i18n';
 
 import { setPrompterSipLine, addPendingCallToPrompt } from './prompter/actions';
 
+import createSoftphoneReducer, {
+    maybeHidePhoneNumber,
+    isSoftphoneHigh 
+} from 'uis-softphone/reducer';
+
 import {
     toggleWidgetVisiblity,
     setAxiosProcessor,
@@ -32,6 +37,7 @@ import {
     addNotificationToSession,
     sendToWebsocket,
     terminateSession,
+    doToggleCallInfoCollapsedness
 } from 'uis-softphone/actions';
 
 import { STATUSES_MANAGER_CREATED, HANDLE_WEBRTC_CREATED } from 'uis-softphone/authorization/constants';
@@ -47,6 +53,7 @@ import {
     HANDLE_LOGOUT,
     SET_PERMISSIONS,
     IS_TRUE,
+    BEFORE_TOGGLE_CALL_INFO_COLLAPSEDNESS
 } from 'uis-softphone/constants';
 
 type RootInstanceSnapshotOut = SnapshotOut<typeof RootStore>;
@@ -77,6 +84,7 @@ const returnTrue = () => true,
 export const RootStore = types
     .model('RootStore', {
         authStore: types.optional(AuthStore, {}),
+        appStore: types.optional(AppStore, {}),
         configStore: types.optional(ConfigStore, {}),
         employeesStore: types.optional(EmployeesStore, {}),
         websocketStore: types.optional(WebsocketStore, {}),
@@ -231,6 +239,9 @@ export const RootStore = types
                 {},
                 applyMiddleware(thunkMiddleware, createSoftphoneMiddleware(), store => next => action => {
                     switch (action.type) {
+                        case BEFORE_TOGGLE_CALL_INFO_COLLAPSEDNESS:
+                            self.appStore.setNotLarge();
+                            break;
                         case SET_PERMISSIONS:
                             self.callHistoryStore.setPermissions(action.permissions);
                             break;
@@ -378,6 +389,8 @@ export const RootStore = types
                 accountFetchedHandlers.push(handler);
             };
 
+            self.isSoftphoneHigh = () => isSoftphoneHigh(getState());
+            self.toggleCallInfoCollapsedness = () => dispatch(doToggleCallInfoCollapsedness);
             self.onDialpadKeyDown = (...args) => dispatch(onDialpadKeyDown(...args));
             self.statusesStore.setStatusUpdator((statusId: number) => dispatch(setStatus(statusId)));
             self.setDictonary = i18n.setDictonary;
@@ -600,4 +613,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
