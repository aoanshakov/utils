diff --git a/package.json b/package.json
index 1273c1f..bc99c50 100644
--- a/package.json
+++ b/package.json
@@ -55,7 +55,7 @@
   "dependencies": {
     "nanoid": "2.1.11",
     "@babel/runtime": "^7.13.9",
-    "antd": "^4.13.0",
+    "antd": "^3.26.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -79,6 +79,6 @@
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "0.0.127"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index d796ef1..3b14281 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -121,7 +121,6 @@ export const RootStore = types
 
                     return newState => {
                         let isChanged = false;
-                        'token' in newState && state.token && !newState.token && (newState.disabled = true);
 
                         Object.keys(newState).forEach(key => {
                             const value = newState[key];
@@ -173,8 +172,10 @@ export const RootStore = types
 
                 window.addEventListener('tokenChange', () => updateState(getTokenParams()));
 
-                self.disable = () => updateState({disabled: true});
-                self.setDisabled = value => value ? self.disable() : self.enable();
+                window.addEventListener('tokenRemove', () => updateState({
+                    token: '',
+                    disabled: true
+                }));
 
                 self.enable = () => updateState({
                     ...getTokenParams(),
@@ -208,4 +209,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
