diff --git a/package.json b/package.json
index 1273c1f..bc99c50 100644
--- a/package.json
+++ b/package.json
@@ -55,7 +55,7 @@
   "dependencies": {
     "nanoid": "2.1.11",
     "@babel/runtime": "^7.13.9",
-    "antd": "^4.13.0",
+    "antd": "^3.26.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -79,6 +79,6 @@
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "0.0.127"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index d2abc31..cfef952 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -8,7 +8,8 @@ import { authorization } from 'uis-softphone/authorization/actions';
 import createSoftphoneMiddleware from 'uis-softphone/middleware';
 import thunkMiddleware from 'redux-thunk';
 import { combineReducers, createStore, applyMiddleware } from 'redux';
-import { INTERCEPT_REQUEST, SET_USER, SET_STATUSES  } from 'uis-softphone/constants';
+import { INTERCEPT_REQUEST, SET_STATUSES  } from 'uis-softphone/constants';
+import { STATUSES_MANAGER_CREATED } from 'uis-softphone/authorization/constants.js';
 import { AuthStore } from './auth/AuthStore';
 import { EmployeesStore } from './employees/EmployeesStore';
 import { WebsocketStore } from './websocket/WebsocketStore';
@@ -82,15 +83,15 @@ export const RootStore = types
                         case SET_STATUSES:
                             self.statusesStore.setStatuses(action.data || []);
                             break;
-                        case SET_USER: {
-                            const {user} = action;
-
-                            self.employeesStore.setEmployee({
-                                status_id: user.status_id
-                            });
+                        case STATUSES_MANAGER_CREATED:
+                            action.statusesManager.on(
+                                'employeeChanged',
+                                ({status_id}) => self.employeesStore.setEmployee({
+                                    status_id
+                                })
+                            );
 
                             break;
-                        }
                         case INTERCEPT_REQUEST: {
                             const {
                                 args,
@@ -228,4 +229,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
