diff --git a/package.json b/package.json
index 9c0d1c9..bb6b623 100644
--- a/package.json
+++ b/package.json
@@ -22,8 +22,6 @@
     "@types/dompurify": "^2.3.3",
     "@types/htmlparser2": "^3.10.3",
     "@types/node": "^14.14.37",
-    "@types/react": "^18.0.21",
-    "@types/react-dom": "^18.0.6",
     "@types/react-window": "^1.8.5",
     "@types/uuid": "^8.3.1",
     "@types/yup": "^0.29.11",
@@ -57,7 +55,6 @@
   },
   "dependencies": {
     "@babel/runtime": "^7.13.9",
-    "@comagic/core": "^1.1.1",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -68,15 +65,10 @@
     "formik": "^2.2.9",
     "html-react-parser": "^3.0.1",
     "madge": "^5.0.1",
-    "magic-ui": "0.0.0-int1",
     "mobx": "^6.6.1",
     "mobx-react-lite": "^3.4.0",
     "mobx-state-tree": "^5.1.6",
     "moment": "^2.29.1",
-    "react": "^18.2.0",
-    "react-dom": "^18.2.0",
-    "react-intl": "^6.1.1",
-    "react-router-dom": "6.9.0",
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9"
diff --git a/src/App.tsx b/src/App.tsx
index 303fdf9..0db72b0 100644
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -9,7 +9,7 @@ import './App.less';
 
 const App: React.FC = observer(() => {
     const {
-        authStore: { updateAuthState },
+        authStore: { updateAuthState, isAuthorized },
         websocketStore,
         chatListStore,
         chatChannelsStore,
@@ -34,11 +34,11 @@ const App: React.FC = observer(() => {
 
     useMountEffect(() => void updateAuthState());
 
-    return (
+    return [false, true].some(value => value === isAuthorized) ? (
         <div className="cm-app-module">
             <AppRoute />
         </div>
-    );
+    ) : null;
 });
 
 export default App;
diff --git a/src/components/chats/chat-panel/styles.less b/src/components/chats/chat-panel/styles.less
index 41ad6c1..14dfe79 100644
--- a/src/components/chats/chat-panel/styles.less
+++ b/src/components/chats/chat-panel/styles.less
@@ -196,7 +196,7 @@
           }
         }
 
-        .ui-button {
+        .ui-button, .cmgui-button {
           grid-column: 3;
           grid-row: 1 / 3;
         }
@@ -209,7 +209,7 @@
       align-items: center;
       min-height: 42px;
 
-      .ui-textarea {
+      .ui-textarea, .cmgui-textarea {
         box-shadow: none;
         border: none;
         background: white;
@@ -979,15 +979,15 @@
 
 .@{p}audio-download-popup {
 
-  .ui-popover-arrow {
+  .ui-popover-arrow, .cmgui-popover-arrow {
     display: none;
   }
 
-  .ui-popover-content {
+  .ui-popover-content, .cmgui-popover-content {
     transform: translateY(8px);
   }
 
-  .ui-popover-inner {
+  .ui-popover-inner, .cmgui-popover-inner {
     position: relative;
     left: 10px;
     top: 9px;
@@ -1000,7 +1000,7 @@
       background-color: @surfaces-highlight;
     }
 
-    .ui-button-ghost {
+    .ui-button-ghost, .cmgui-button-ghost {
       color: @fonts-primary;
     }
   }
@@ -1010,18 +1010,18 @@
   width: 100%;
   height: 100%;
 
-  .ui-modal-content {
+  .ui-modal-content, .cmgui-modal-content {
     background: none;
     box-shadow: none;
     padding: 0;
     height: 100%;
     border: none;
 
-    .ui-modal-header {
+    .ui-modal-header, .cmgui-modal-header {
       display: none;
     }
 
-    .ui-modal-main {
+    .ui-modal-main, .cmgui-modal-main {
       margin: 0;
       width: 100%;
       height: 100%;
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index eaff607..26d3da2 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -22,6 +22,9 @@ import OperatorSettingsStore from '@models/operator-settings';
 import { eventBus } from '@comagic/core';
 import ContactsIntegraionStore from '@models/contacts-integration/ContactsIntegraionStore';
 
+import { httpRest } from '@/httpRest';
+import { httpRpc } from '@/httpRpc';
+
 export const ACCESS_TOKEN_EXPIRED = 'access_token_expired';
 export const REFRESH_TOKEN_EXPIRED = 'refresh_token_expired';
 export const ACCESS_TOKEN_INVALID = 'access_token_invalid';
@@ -129,13 +132,25 @@ export const RootStore = types
             void init();
         };
 
-        return { afterCreate, resetStore, resetAfterError, init };
+        return {
+            afterCreate,
+            resetStore,
+            resetAfterError,
+            init,
+
+            rest: () => {
+            },
+
+            rpc: () => {
+            },
+        };
     });
 
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
 
 if (process.env.NODE_ENV === 'development') {
     window.chatsRootStore = rootStore;
diff --git a/src/models/account/AccountStore.ts b/src/models/account/AccountStore.ts
index 3a0a43c..c77c997 100644
--- a/src/models/account/AccountStore.ts
+++ b/src/models/account/AccountStore.ts
@@ -1,6 +1,7 @@
-import { flow, Instance, getParent, types, cast } from 'mobx-state-tree';
+import { flow, Instance, getParent, types, cast, getSnapshot } from 'mobx-state-tree';
 import { httpRpc, DataApiResponseResult } from '@/httpRpc';
 import { intl } from '@/i18n';
+import { RootStore } from '@/models/RootStore';
 
 const PermissionUnit = types.model('PermissionUnit', {
     is_delete: types.optional(types.boolean, false),
@@ -55,12 +56,18 @@ export const AccountStore = types
     })
     .views(self => ({
         getOtherEmployeeChatsAccess() {
-            const permission = [...self.account.permissions].find(item => item[0] === 'other_employee_chats_access');
-            return permission && permission[1] ? permission[1].is_select : false;
+            const permission = getSnapshot(self.account.permissions).other_employee_chats_access;
+            return permission?.is_select || false;
         },
         getTagsPermissions() {
-            const tagsPermissions = [...self.account.permissions].find(item => item[0] === 'tag_management')[1];
-            return tagsPermissions;
+            return (
+                getSnapshot(self.account.permissions).tag_management || {
+                    is_delete: false,
+                    is_insert: false,
+                    is_select: false,
+                    is_update: false,
+                }
+            );
         },
     }))
     .actions(self => {
diff --git a/src/models/auth/AuthStore.ts b/src/models/auth/AuthStore.ts
index 933fdb3..8e6f31d 100644
--- a/src/models/auth/AuthStore.ts
+++ b/src/models/auth/AuthStore.ts
@@ -26,7 +26,7 @@ const AUTH_KEY: string = process.env.REACT_APP_AUTH_COOKIE || '$REACT_APP_AUTH_C
 
 export const AuthStore = types
     .model('AuthStore', {
-        isAuthorized: types.optional(types.boolean, Boolean(false)),
+        isAuthorized: types.maybe(types.boolean),
         windowId: types.optional(types.string, generateTraceId('local')),
     })
     .views(() => ({
