diff --git a/package.json b/package.json
index 0251d89..7ca7d33 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,6 @@
     "@types/node": "^14.14.37",
     "@types/react": "^17.0.2",
     "@types/react-dom": "^17.0.1",
-    "@types/react-router-dom": "^5.1.6",
     "@types/uuid": "^8.3.1",
     "@types/yup": "^0.29.11",
     "@typescript-eslint/eslint-plugin": "^4.16.1",
@@ -57,7 +56,7 @@
     "nanoid": "^3.2.0",
     "@babel/runtime": "^7.13.9",
     "@comagic/core": "^0.6.7",
-    "antd": "^4.13.0",
+    "antd": "3.26.7",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -74,14 +73,12 @@
     "react": "^17.0.1",
     "react-dom": "^17.0.1",
     "react-intl": "^5.13.2",
-    "react-router-dom": "^5.2.0",
     "react-redux": "^7.0.0",
     "redux": "^4.0.0",
     "redux-thunk": "^2.3.0",
     "short-uuid": "^4.2.0",
     "uuid": "^8.3.2",
     "yup": "^0.32.9",
-    "uis-softphone": "git+https://sip_lib:glpat-Xzs1ef2zY2QoxFSchj8P@gitlab.uis.dev/web/sip_lib.git#multitab-local",
-    "@uiscom/uis_webrtc": "git+https://uis_webrtc:glpat-ydssS-Qi8NFPN7dmjkcp@gitlab.uis.dev/web/uis_webrtc.git#local-multitab"
+    "uis-softphone": "./misc/sip_lib"
   }
 }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index a3d0fff..dd738c5 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -86,13 +86,15 @@ export const RootStore = types
     .actions(self => {
         let initialState: RootInstanceSnapshotOut,
             hasError = false,
-            doRequest = () => null;
+            doRequest = () => null,
+            doMaybeHidePhoneNumber = value => value;
         const sizeChangeHandlers = [],
             accountFetchedHandlers = [],
             applicationChangeHandlers = [],
             subscriptionRemovers = [],
             subscribe = (...args) => subscriptionRemovers.push(eventBus.subscribe(...args)),
-            request = async (...args) => doRequest(...args);
+            request = async (...args) => doRequest(...args),
+            maybeHidePhoneNumberMethod = (...args) => doMaybeHidePhoneNumber(...args);
 
         const removeSubscriptions = () => {
             subscriptionRemovers.forEach(removeSubscription => removeSubscription());
@@ -294,11 +296,7 @@ export const RootStore = types
                                 show_notification &&
                                     dispatch(
                                         sendBrowserNotification(state.i18n('Connecting to call'), {
-                                            body: `${employee_full_name} ${maybeHidePhoneNumber(
-                                                state,
-                                                subscriber_number,
-                                                true
-                                            )}`,
+                                            body: `${employee_full_name} ${doMaybeHidePhoneNumber(subscriber_number)}`,
                                             icon: '/build/icon.ico',
                                             silent: false,
                                             requireInteraction: true,
@@ -569,6 +567,7 @@ export const RootStore = types
 
             dispatch(setAxiosProcessor(axios => (axios.defaults.headers['X-Auth-Type'] = 'jwt')));
             initialState = getSnapshot(self);
+            doMaybeHidePhoneNumber = value => maybeHidePhoneNumber(getState(), value, true);
 
             doRequest = args =>
                 new Promise((resolve, reject) =>
@@ -584,10 +583,16 @@ export const RootStore = types
             applySnapshot(self, initialState);
         };
 
-        return { afterCreate, resetStore, request };
+        return {
+            afterCreate,
+            resetStore,
+            request,
+            maybeHidePhoneNumber: maybeHidePhoneNumberMethod 
+        };
     });
 
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
