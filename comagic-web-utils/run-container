#!/bin/bash

port=""
action="runclient"
dockerArguments=""
entrypointArguments=""

linuxSshKeyName="id_ed25519"
macSshKeyName="id_rsa"
comagicWebDir=$HOME/misc/ns5/comagic_web
utilsDir=$HOME/misc/comagic-web-utils/content/utils
configJsonPath=$HOME/misc/comagic-web-utils/content/comagic-config.json

while [ -n "$1" ]
do
    if [ "$1" = "-p" ] || [ "$1" = "--port" ]
    then
        port="-p $2:443"
        shift
    elif [ "$1" = "-a" ] || [ "$1" = "--action" ]
    then
        action=$2
        shift
    elif [ "$1" = "--network=host" ]
    then
        dockerArguments="$dockerArguments $1"
        shift
    fi

    shift
done

if [ $(uname | grep Darwin | wc -l) -eq 0 ]
then
    dockerArguments="$dockerArguments --mount type=bind,source=/etc/passwd,target=/etc/passwd"
    dockerArguments="$dockerArguments --mount type=bind,source=/etc/group,target=/etc/group"
    dockerArguments="$dockerArguments --mount type=bind,source=$HOME/.ssh/$linuxSshKeyName,target=/root/.ssh/$linuxSshKeyName"
    entrypointArguments="$entrypointArguments -u $USER"
    farg="-f"
else
    dockerArguments="$dockerArguments --mount type=bind,source=$HOME/.ssh/$macSshKeyName,target=/root/.ssh/$macSshKeyName"
fi

imageTag=aoanshakov/utils

docker --version

if [ $? -ne 0 ]
then
    echo "Установи докер"
    exit 1
fi

currentFile=$0

if [ -L $currentFile ]
then
    currentFile=$(readlink $farg $currentFile)

    if [ $? -ne 0 ]
    then
        echo "Не удалось получить путь к скрипту"
        exit 1
    fi
fi

currentDirectory=$(dirname $currentFile)

if [ $? -ne 0 ]
then
    echo "Не удалось получить текущую директорию"
    exit 1
fi

linesCount=$(docker images ${imageTag} | wc -l)

if [ $? -ne 0 ]
then
    echo "Не удалось получить список образов"
    exit 1
fi

if [ $linesCount -eq 1 ]
then
    docker build --no-cache -t $imageTag $currentDirectory/utils

    if [ $? -ne 0 ]
    then
        echo "Не удалось собрать образ"
        exit 1
    fi
fi

docker run -it --rm \
    -v $comagicWebDir:/usr/local/src/comagic_web \
    -v $utilsDir/configure:/home/configure \
    --mount type=bind,source=$configJsonPath,target=/usr/local/src/comagic-config.json \
    $dockerArguments $port \
    $imageTag $entrypointArguments -a $action
