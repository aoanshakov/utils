diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index 91a06ca..211a09d 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -15,6 +15,7 @@ import {
     openUrl,
     openContact,
     isAbleToOpenContact,
+    isElectron,
 } from '@/utils';
 
 import {
@@ -25,13 +26,7 @@ import {
 } from '@comagic/softphone-widget';
 
 import { getResponse } from '@comagic/softphone-core/src/utils';
-
-import {
-    eventBus,
-    isElectron,
-    ModuleAvailability,
-    handleModuleAvailabilityGetterFetched
-} from '@comagic/core';
+import { eventBus } from '@comagic/core';
 
 import InfopinFeedbackStore from '@models/feedback/FeedbackWebStore';
 import FeedbackWebStore from '@models/feedback/FeedbackWebStore';
@@ -81,7 +76,6 @@ export const RootStore = types
         promperStore: types.optional(PromperStore, {}),
         callHistoryStore: types.optional(CallHistoryStore, {}),
         callStatsStore: types.optional(CallStatsStore, {}),
-        moduleAvailability: types.optional(ModuleAvailability, {}),
     })
     .views(self => ({
         i18n: key => intlMessages(self.locale)[key],
@@ -321,17 +315,13 @@ export const RootStore = types
                     authStore = args.authStore;
                     const accessGranted = getSoftphoneAvailability(accountStore),
                         account = accountStore.toJSON()?.account;
-
-                    handleModuleAvailabilityGetterFetched({
-                        moduleAvailability: self.moduleAvailability,
-                        accountStore,
-                    })('chats', import('chats/isWorkplaceAllowed'));
+                    self.setAccount(account);
 
                     accessGranted && accountFetchedHandlers.forEach(handler => handler(accountStore));
                     updateState({ accessGranted });
 
                     account?.app_id && isSingleApp && !accessGranted && logout();
-                    self.setAccount(account);
+
                     localStorage.getItem('isLarge') === 'true' && self.setIsLarge();
 
                     const areVirtualNumberGroupsEnabled = ['usa', 'rolands'].includes(account?.project);
@@ -674,4 +664,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
