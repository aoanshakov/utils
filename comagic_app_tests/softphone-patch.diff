diff --git a/package.json b/package.json
index 792f144..09ccec0 100644
--- a/package.json
+++ b/package.json
@@ -55,8 +55,6 @@
   },
   "dependencies": {
     "@babel/runtime": "^7.13.9",
-    "@comagic/core": "^0.6.7",
-    "@comagic/softphone-core": "2.0.0",
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -66,24 +64,13 @@
     "exports-loader": "2.0.0",
     "filesize": "^8.0.3",
     "formik": "^2.2.9",
-    "magic-ui": "0.0.0-int1",
     "mobx": "^6.1.8",
     "mobx-react-lite": "^3.2.0",
     "mobx-state-tree": "^5.0.1",
-    "moment": "2.29.1",
     "nanoid": "^3.2.0",
-    "react": "^18.2.0",
-    "react-csv": "^2.0.3",
-    "react-dom": "^18.2.0",
-    "react-intl": "6.3.2",
-    "react-redux": "^7.0.0",
-    "react-router-dom": "^6.4.0",
-    "redux": "^4.0.0",
-    "redux-thunk": "^2.3.0",
     "janus-gateway": "1.1.4",
     "short-uuid": "^4.2.0",
     "string-hash": "^1.1.3",
-    "@comagic/softphone-widget": "2.0.2",
     "uuid": "^8.3.2",
     "yup": "^0.32.9"
   }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index 7b8c82d..bb530f3 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -419,6 +419,7 @@ export const RootStore = types
             ) => {
                 const {
                     isMaster,
+                    setNotEmployee,
                     coreStore: { error },
                     settings: { is_use_widget_for_calls: isUseWidgetForCalls },
                 } = (self as RootInstance).softphoneStore;
@@ -431,6 +432,8 @@ export const RootStore = types
                 if (self.promperStore.prompterSipLine) {
                     broadcast('await_prompter_call', self.i18n('Already preparing to call'), forceBroadcast);
                 } else {
+                    setNotEmployee(call_session_id);
+
                     self.promperStore.addPendingCallToPrompt({
                         call_session_id,
                         subscriber_number,
@@ -752,4 +755,5 @@ export type RootInstance = Instance<typeof RootStore> & {
 
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
