diff --git a/package.json b/package.json
index 20af368..e4e7e3c 100644
--- a/package.json
+++ b/package.json
@@ -18,8 +18,6 @@
     "@svgr/webpack": "^5.5.0",
     "@types/classnames": "^2.2.11",
     "@types/node": "^14.14.37",
-    "@types/react": "^17.0.2",
-    "@types/react-dom": "^17.0.1",
     "@types/uuid": "^8.3.1",
     "@types/yup": "^0.29.11",
     "@typescript-eslint/eslint-plugin": "^4.16.1",
@@ -52,8 +50,6 @@
   },
   "dependencies": {
     "@babel/runtime": "^7.13.9",
-    "@comagic/core": "0.0.0-int0",
-    "@uiscom/uis_webrtc": "0.0.0-int0"
     "async-mutex": "^0.3.2",
     "axios": "^0.21.1",
     "classnames": "^2.2.6",
@@ -62,23 +58,17 @@
     "file-saver": "^2.0.5",
     "filesize": "^8.0.3",
     "formik": "^2.2.9",
-    "magic-ui": "0.0.0-int0",
     "mobx": "^6.1.8",
     "mobx-react-lite": "^3.2.0",
     "mobx-state-tree": "^5.0.1",
     "moment": "^2.29.1",
     "nanoid": "^3.2.0",
-    "react": "^17.0.1",
     "react-csv": "^2.0.3",
-    "react-dom": "^17.0.1",
-    "react-intl": "^5.13.2",
     "react-redux": "^7.0.0",
-    "react-router-dom": "^6.4.0",
     "redux": "^4.0.0",
     "redux-thunk": "^2.3.0",
     "short-uuid": "^4.2.0",
     "string-hash": "^1.1.3",
-    "uis-softphone": "git+https://sip_lib:glpat-Xzs1ef2zY2QoxFSchj8P@gitlab.uis.dev/web/sip_lib.git#multitab-local",
     "uuid": "^8.3.2",
     "yup": "^0.32.9"
   }
diff --git a/src/models/RootStore.ts b/src/models/RootStore.ts
index 7263218..35692ca 100644
--- a/src/models/RootStore.ts
+++ b/src/models/RootStore.ts
@@ -91,7 +91,7 @@ export const RootStore = types
         statusesStore: types.optional(StatusesStore, {}),
         callHistoryStore: types.optional(CallHistoryStore, {}),
         callStatsStore: types.optional(CallStatsStore, {}),
-        moduleAvailability: ModuleAvailability,
+        moduleAvailability: types.optional(ModuleAvailability, {}),
     })
     .views(self => ({
         i18n: key => intlMessages(self.locale)[key],
@@ -689,11 +689,6 @@ export const RootStore = types
             self.locale = locale;
         };
 
-        const setLocale = (locale: string): void => {
-            moment.locale(locale);
-            self.locale = locale;
-        };
-
         return {
             afterCreate,
             resetStore,
@@ -712,4 +707,5 @@ export const RootStore = types
 export type RootInstance = Instance<typeof RootStore>;
 export const RootStoreContext = React.createContext<null | RootInstance>(null);
 export const Provider = RootStoreContext.Provider;
-export const rootStore = RootStore.create({});
\ No newline at end of file
+export let rootStore;
+export const createRootStore = () => (rootStore = RootStore.create({}));
\ No newline at end of file
