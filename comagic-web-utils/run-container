#!/bin/bash

port=""
action="runclient"
dockerArguments=""
entrypointArguments=""
farg=""

function getAbsolutePath {
    currentDirectory=$(pwd)
    cd $@
    result=$(pwd)
    echo $result
    cd $currentDirectory
}

if [ $(uname | grep Darwin | wc -l) -eq 0 ]
then
    dockerArguments="$dockerArguments --mount type=bind,source=/etc/passwd,target=/etc/passwd"
    dockerArguments="$dockerArguments --mount type=bind,source=/etc/group,target=/etc/group"
    entrypointArguments="$entrypointArguments -u $USER"
    farg="-f"
fi

currentFile=$0

if [ -L $currentFile ]
then
    currentFile=$(readlink $farg $currentFile)

    if [ $? -ne 0 ]
    then
        echo "Не удалось получить путь к скрипту"
        exit 1
    fi
fi

currentDirectory=$(getAbsolutePath $(dirname $currentFile))

if [ $? -ne 0 ]
then
    echo "Не удалось получить текущую директорию"
    exit 1
fi

if [ -z "$COMAGIC_WEB_DIR" ]
then
    echo "Укажите путь к склонированному репозиторию git@gitlab.uis.dev:web/comagic_web.git в переменной" \
        "COMAGIC_WEB_DIR"

    exit 1
fi

if [ ! -d $COMAGIC_WEB_DIR ]
then
    echo "Не найдена директория $COMAGIC_WEB_DIR указываемая в переменной COMAGIC_WEB_DIR"
    exit 1
fi

if [ -z "$COMAGIC_WEB_CONFIG" ]
then
    COMAGIC_WEB_CONFIG=$currentDirectory/comagic-config.json
fi

if [ ! -f $COMAGIC_WEB_CONFIG ]
then
    echo "Не найден файл конфигурации comagic-config.json по пути $COMAGIC_WEB_CONFIG, указываемый в переменной" \
        "COMAGIC_WEB_CONFIG"
    exit 1
fi

if [ -z "$COMAGIC_WEB_SSH_KEY" ]
then
    COMAGIC_WEB_SSH_KEY="id_rsa"
fi

sshKeyPath=$HOME/.ssh/$COMAGIC_WEB_SSH_KEY

if [ ! -f $sshKeyPath ]
then
    echo "Не найден ssh-ключ по пути $sshKeyPath, имя которого можно указать в переменной в переменной" \
        "COMAGIC_WEB_SSH_KEY"

    exit 1
fi

dockerArguments="$dockerArguments --mount type=bind,source=$sshKeyPath,target=/root/.ssh/$COMAGIC_WEB_SSH_KEY"

while [ -n "$1" ]
do
    if [ "$1" = "-p" ] || [ "$1" = "--port" ]
    then
        port="-p $2:443"
        shift
    elif [ "$1" = "-a" ] || [ "$1" = "--action" ]
    then
        action=$2
        shift
    elif [ "$1" = "--network=host" ]
    then
        dockerArguments="$dockerArguments $1"
        shift
    fi

    shift
done

imageTag=aoanshakov/utils

docker --version

if [ $? -ne 0 ]
then
    echo "Установи докер"
    exit 1
fi

linesCount=$(docker images ${imageTag} | wc -l)

if [ $? -ne 0 ]
then
    echo "Не удалось получить список образов"
    exit 1
fi

if [ $linesCount -eq 1 ]
then
    docker build --no-cache -t $imageTag $currentDirectory/utils

    if [ $? -ne 0 ]
    then
        echo "Не удалось собрать образ"
        exit 1
    fi
fi

docker run -it --rm \
    -v $COMAGIC_WEB_DIR:/usr/local/src/comagic_web \
    -v $currentDirectory/utils/configure:/home/configure \
    --mount type=bind,source=$COMAGIC_WEB_CONFIG,target=/usr/local/src/comagic-config.json \
    $dockerArguments $port \
    $imageTag $entrypointArguments -a $action
